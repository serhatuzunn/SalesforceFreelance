//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class AddBarcodeParser {

	public List<Columns> Columns {get;set;} 
	public String TableName {get;set;} 
	public Integer BarcodeId {get;set;} 
	public Integer FairId {get;set;} 
	public Integer CustomerId {get;set;} 
	public Integer CustomerTypeId {get;set;} 
	public Integer CardId {get;set;} 
	public Integer TermId {get;set;} 
	public Integer WebId {get;set;} 
	public Integer ChannelId {get;set;} 
	public Integer FairCardId {get;set;} 
	public Integer FairHallId {get;set;} 
	public Integer FairDoorId {get;set;} 
	public Integer SeriId {get;set;} 
	public String SeriNo {get;set;} 
	public String Barcode {get;set;} 
	public String Receipt {get;set;} 
	public String PnrCode {get;set;} 
	public String PromotionCode {get;set;} 
	public Boolean IsPrinted {get;set;} 
	public String CreateDate {get;set;} 
	public String UpdateDate {get;set;} 
	public String PrintDate {get;set;} 
	public Integer CreateUserId {get;set;} 
	public Integer UpdateUserId {get;set;} 
	public Integer CreateLicenseId {get;set;} 
	public Integer UpdateLicenseId {get;set;} 
	public Boolean ActiveFlg {get;set;} 
    public String Error {get;set;} 
    public AddBarcodeParser()
    {
        
    }
    public void AddBarcodeParser()
    {
        
    }
    public AddBarcodeParser(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'Columns') {
						Columns = arrayOfColumns(parser);
					} else if (text == 'TableName') {
						TableName = parser.getText();
					} else if (text == 'BarcodeId') {
						BarcodeId = parser.getIntegerValue();
					} else if (text == 'FairId') {
						FairId = parser.getIntegerValue();
					} else if (text == 'CustomerId') {
						CustomerId = parser.getIntegerValue();
					} else if (text == 'CustomerTypeId') {
						CustomerTypeId = parser.getIntegerValue();
					} else if (text == 'CardId') {
						CardId = parser.getIntegerValue();
					} else if (text == 'TermId') {
						TermId = parser.getIntegerValue();
					} else if (text == 'WebId') {
						WebId = parser.getIntegerValue();
					} else if (text == 'ChannelId') {
						ChannelId = parser.getIntegerValue();
					} else if (text == 'FairCardId') {
						FairCardId = parser.getIntegerValue();
					} else if (text == 'FairHallId') {
						FairHallId = parser.getIntegerValue();
					} else if (text == 'FairDoorId') {
						FairDoorId = parser.getIntegerValue();
					} else if (text == 'SeriId') {
						SeriId = parser.getIntegerValue();
					} else if (text == 'SeriNo') {
						SeriNo = parser.getText();
					} else if (text == 'Barcode') {
						Barcode = parser.getText();
					} else if (text == 'Receipt') {
						Receipt = parser.getText();
					} else if (text == 'PnrCode') {
						PnrCode = parser.getText();
					} else if (text == 'PromotionCode') {
						PromotionCode = parser.getText();
					} else if (text == 'IsPrinted') {
						IsPrinted = parser.getBooleanValue();
					} else if (text == 'CreateDate') {
						CreateDate = parser.getText();
					} else if (text == 'UpdateDate') {
						UpdateDate = parser.getText();
					} else if (text == 'PrintDate') {
						PrintDate = parser.getText();
					} else if (text == 'CreateUserId') {
						CreateUserId = parser.getIntegerValue();
					} else if (text == 'UpdateUserId') {
						UpdateUserId = parser.getIntegerValue();
					} else if (text == 'CreateLicenseId') {
						CreateLicenseId = parser.getIntegerValue();
					} else if (text == 'UpdateLicenseId') {
						UpdateLicenseId = parser.getIntegerValue();
					} else if (text == 'ActiveFlg') {
						ActiveFlg = parser.getBooleanValue();
					} else if (text == 'Error') {
						Error = parser.getText();
					} else {
						System.debug(LoggingLevel.WARN, 'AddBarcodeParser consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Columns {
		public String ColumnName {get;set;} 
		public String ColumnType {get;set;} 
		public String ColumnValue {get;set;} 
		public Boolean IsIdentity {get;set;} 
		public Boolean IsUpdated {get;set;} 

		public Columns(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'ColumnName') {
							ColumnName = parser.getText();
						} else if (text == 'ColumnType') {
							ColumnType = parser.getText();
						} else if (text == 'ColumnValue') {
							ColumnValue = parser.getText();
						} else if (text == 'IsIdentity') {
							IsIdentity = parser.getBooleanValue();
						} else if (text == 'IsUpdated') {
							IsUpdated = parser.getBooleanValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Columns consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}

	}
	
	
	public static List<AddBarcodeParser> parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return arrayOfAddBarcodeParser(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	







    private static List<AddBarcodeParser> arrayOfAddBarcodeParser(System.JSONParser p) {
        List<AddBarcodeParser> res = new List<AddBarcodeParser>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new AddBarcodeParser(p));
        }
        return res;
    }




    private static List<Columns> arrayOfColumns(System.JSONParser p) {
        List<Columns> res = new List<Columns>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Columns(p));
        }
        return res;
    }


}